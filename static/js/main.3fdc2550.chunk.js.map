{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/cook.jpg","images/chef.png","images/drinkIcon.svg","images/exploreIcon.svg","images/fried.svg","images/mealIcon.svg","images/profileIcon.svg","images/recipe.svg","images/searchIcon.svg","images/whiteHeartIcon.svg","context/ReceitasContext.jsx","pages/Login.jsx","pages/NotFound.jsx","servicesAPI/foodAPI.js","servicesAPI/drinkAPI.js","components/Card.jsx","components/CopyToClipBoard.jsx","components/FavoriteShareButtons.jsx","components/CardFavorite.jsx","components/Categories.jsx","components/Footer.jsx","components/SearchBar.jsx","components/Header.jsx","components/ListaIngredientes.jsx","components/ListaIngredientesEmProgresso.jsx","components/Recomended.jsx","pages/Receitas.jsx","pages/ReceitasB.jsx","pages/ReceitaDetalhada.jsx","pages/ReceitaEmProgresso.jsx","pages/ReceitasFeitas.jsx","pages/ReceitasFavoritas.jsx","pages/Perfil.jsx","pages/Explorar.jsx","pages/ExplorarReceitas.jsx","pages/ExplorarReceitasPorIngredientes.jsx","pages/ExplorarComidasPorLocalOrigem.jsx","context/ReceitasProvider.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ReceitasContext","createContext","Login","history","useContext","email","setEmail","setLogin","useState","enable","setEnable","pass","setPass","useEffect","test","className","data-testid","autoComplete","type","placeholder","onChange","target","value","onClick","localStorage","setItem","JSON","stringify","push","disabled","defaultProps","NotFound","hidden","searchFor","a","length","alert","searchType","ingredient","itemName","firstLetter","byId","categories","byCategory","random","listIngredient","byArea","filterByArea","URL","fetch","then","resp","json","catch","error","console","log","message","response","meals","fetchFood","drinks","fetchDrink","Card","imagePath","id","itemType","indexId","cardType","to","alt","src","CopyToClipBoard","reset","copied","setCopied","setClipboard","pathname","copy","time","setTimeout","clearTimeout","FavoriteButton","recipe","recipeId","testId","page","favoriteRecipes","setFavoriteRecipes","recipeGlobal","recipesDone","isFetching","setIsFetching","find","recipeObj","urlByType","isFavorite","setIsFavorite","recipeIsAlreadyFavorite","map","eachRecipe","includes","checkFavorite","prevState","favoriteIndex","forEach","recipeFavorited","index","slice","obj","area","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","image","shareIcon","blackHeartIcon","whiteHeartIcon","pageType","titlePage","alcoholic","date","tagsRecipe","FavoriteShareButtons","key","Categories","setCategories","setFilterRecipe","setExecuteFilter","firstRequestAPI","executeSetFilter","linkElement","imgSrc","linkTestId","url","style","height","width","Footer","DrinkIcon","ExploreIcon","MealIcon","SearchBar","requestAPI","setSearchType","setSearchInput","searchInput","htmlFor","defaultChecked","Header","disabledSearchIcon","disabledProfileIcon","titleHeader","showSearchBar","setShowSearchBar","profileIcon","ProfileIcon","searchIcon","SearchIcon","titleElement","ListaIngredientes","recipesInProgress","keyByType","recipesInProgLS","parse","getItem","recipesInProg","isDone","recipeDone","recipesIsInProg","Object","keys","list","ingredientsName","reduce","array","str","concat","measures","measure","createIngredientList","ListaIngredientesEmProgresso","setRecipesDone","setRecipesInProgress","checked","shouldDisable","valueName","split","valueMeasure","isChecked","objIngThatContainsIngName","ingredientIndex","indexOf","check","doneDate","dateModified","tags","strTags","Recomended","isFetchingLocal","setIsFetchingLocal","recomendations","setRecommendations","mounted","data-slide-to","recomendation","inversePrefix","comidas","bebidas","cardRecomendation","Receitas","match","recipes","setRecipes","setTitleHeader","setDisabledSearchIcon","filterRecipe","filterIngredient","path","categoryType","titleByType","prefixByType","responseFood","responseDrink","ReceitasB","ReceitaDetalhada","keyProps","setRecipeGlobal","setRecipe","params","strInstructions","title","strYoutube","replace","frameBorder","allow","allowFullScreen","ReceitaEmProgresso","firstRender","ReceitasFeitas","filter","setFilter","typeByFilter","Foods","Drinks","feitas","feita","idx","CardFavorite","tagName","idxTag","PagePerfil","userEmail","setUserEmail","localStorageEmail","Explorar","ExplorarReceitas","randomId","setRandomId","ExplorarReceitasPorIngredientes","setFilterIngredient","ingredientes","setIngredientes","srcByType","propStrIngredient","ExplorarComidasPorLocalOrigem","areas","setAreas","filterArea","setFilterArea","areasOption","meal","strMealThumb","strMeal","idMeal","ReceitasProvider","children","login","setHidden","setDisabledProfileIcon","executeFilter","filterDisabled","setFilterDisabled","cocktails","isRecovering","setIsRecovering","recipesDoneLS","favoriteRecipesLS","clear","contextValue","drink","keyObj","keyURL","renderEmail","param","Provider","App","component","ReceitasFavoritas","Perfil","exact","Boolean","window","location","hostname","appWithRoute","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fdc2550.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/cook.d0fdc0c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chef.c48f87a1.png\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/fried.4ebd569d.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/recipe.f57dcb82.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","import { createContext } from 'react';\n\nconst ReceitasContext = createContext();\n\nexport default ReceitasContext;\n","import React, { useState, useEffect, useContext } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction Login({ history }) {\n  const { email, setEmail, setLogin } = useContext(ReceitasContext);\n  const [enable, setEnable] = useState(false);\n  const [pass, setPass] = useState('');\n\n  function handleClick() {\n    setLogin(true);\n    localStorage.setItem('user', JSON.stringify({ email }));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    history.push('/comidas');\n    setEnable(false);\n  }\n\n  useEffect(() => {\n    const seven = /.{7,}/;\n    const reg = /^((?!\\.)[\\w-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/;\n    setEnable(reg.test(email) && seven.test(pass));\n  }, [email, pass]);\n\n  return (\n    <section className=\"login-container\">\n      <h2 className=\"login-title\">ZÉ RECEITAS</h2>\n      <section className=\"login-input-btn\">\n        <div className=\"login-image\" />\n        <form>\n          <section className=\"login-inputs\">\n            <input\n              className=\"login-email\"\n              data-testid=\"email-input\"\n              autoComplete=\"user-email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={ ({ target }) => setEmail(target.value) }\n            />\n            <input\n              className=\"login-pass\"\n              data-testid=\"password-input\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              placeholder=\"Password\"\n              onChange={ ({ target }) => setPass(target.value) }\n            />\n            <section className=\"login-button-container\">\n              <button\n                onClick={ () => { handleClick(); } }\n                data-testid=\"login-submit-btn\"\n                type=\"button\"\n                className=\"login-button\"\n                disabled={ !enable }\n              >\n                Entrar\n              </button>\n            </section>\n          </section>\n        </form>\n      </section>\n    </section>\n  );\n}\n\nLogin.defaultProps = {\n  history: '/',\n};\n\nLogin.propTypes = {\n  history: propTypes.shape(),\n};\n\nexport default Login;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <section className=\"login-container\">\n      <h2 className=\"login-title\">Página Não Encontrada</h2>\n      <p hidden className=\"login-title\">Not Found</p>\n      <section className=\"login-input-btn\">\n        <div className=\"login-image\" />\n      </section>\n    </section>\n  );\n}\n\nexport default NotFound;\n","async function fetchFood(searchFor, value) {\n  const zero = 0;\n  if (searchFor === 'firstLetter' && (value.length > 1 || value.length === zero)) {\n    // eslint-disable-next-line no-alert\n    alert('Sua busca deve conter somente 1 (um) caracter');\n    return;\n  }\n  const baseURL = 'https://www.themealdb.com/api/json/v1/1/';\n  const searchType = {\n    ingredient: 'filter.php?i=',\n    itemName: 'search.php?s=',\n    firstLetter: 'search.php?f=',\n    byId: 'lookup.php?i=',\n    categories: 'list.php?c=list',\n    byCategory: 'filter.php?c=',\n    random: 'random.php',\n    listIngredient: 'list.php?i=list',\n    byArea: 'list.php?a=list',\n    filterByArea: 'filter.php?a=',\n  };\n  const URL = `${baseURL}${searchType[searchFor]}${value}`;\n  const response = await fetch(URL)\n    .then((resp) => resp.json())\n    .catch((error) => {\n      console.log(`Deu erro: ${error.message}`);\n    });\n  return response.meals;\n}\n\nexport default fetchFood;\n","async function fetchDrink(searchFor, value) {\n  const zero = 0;\n  if (searchFor === 'firstLetter' && (value.length > 1 || value.length === zero)) {\n    // eslint-disable-next-line no-alert\n    alert('Sua busca deve conter somente 1 (um) caracter');\n    return;\n  }\n  const baseURL = 'https://www.thecocktaildb.com/api/json/v1/1/';\n  const searchType = {\n    ingredient: 'filter.php?i=',\n    itemName: 'search.php?s=',\n    firstLetter: 'search.php?f=',\n    byId: 'lookup.php?i=',\n    categories: 'list.php?c=list',\n    byCategory: 'filter.php?c=',\n    random: 'random.php',\n    listIngredient: 'list.php?i=list',\n  };\n  const URL = `${baseURL}${searchType[searchFor]}${value}`;\n  const response = await fetch(URL)\n    .then((resp) => resp.json())\n    .catch((error) => {\n      console.log(`Deu erro: ${error.message}`);\n    });\n  return response.drinks;\n}\n\nexport default fetchDrink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction Card({ imagePath, itemName, id, itemType, indexId, cardType }) {\n  return (\n    <div data-testid={ `${indexId}-${cardType}-card` } className=\"card-container\">\n      <div className=\"card-datails\">\n        <Link className=\"card-details-link\" to={ `/${itemType}/${id}` }>\n          <img\n            data-testid={ `${indexId}-card-img` }\n            alt=\"recipe cover\"\n            className=\"card-image\"\n            src={ imagePath }\n          />\n          <div data-testid={ `${indexId}-card-name` } className=\"card-info\">\n            <h4 className=\"card-title\">{itemName}</h4>\n          </div>\n          {id && <button type=\"button\" className=\"card-ver-receita\">ver receita</button>}\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  imagePath: propTypes.string.isRequired,\n  itemName: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  itemType: propTypes.string.isRequired,\n  indexId: propTypes.number.isRequired,\n  cardType: propTypes.string.isRequired,\n};\n\nexport default Card;\n","import { useState, useEffect } from 'react';\r\nimport copy from 'clipboard-copy';\r\n\r\nconst CopyToClipBoard = (reset = null) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const setClipboard = (pathname) => {\r\n    copy(`http://localhost:3000${pathname}`);\r\n    setCopied(true);\r\n  };\r\n  useEffect(() => {\r\n    let time;\r\n    if (copied && reset) {\r\n      time = setTimeout(() => setCopied(false), reset);\r\n    }\r\n    return () => {\r\n      clearTimeout(time);\r\n    };\r\n  }, [copied, reset]);\r\n  return [copied, setClipboard];\r\n};\r\nexport default CopyToClipBoard;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport ReceitasContext from '../context/ReceitasContext';\r\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\r\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\r\nimport shareIcon from '../images/shareIcon.svg';\r\nimport CopyToClipBoard from './CopyToClipBoard';\r\n\r\nfunction FavoriteButton({ recipeId, type, testId = '', page = '' }) {\r\n  const { favoriteRecipes, setFavoriteRecipes, recipeGlobal, recipesDone,\r\n    isFetching, setIsFetching } = useContext(ReceitasContext);\r\n  const textTime = 3000;\r\n  const [copied, setClipboard] = CopyToClipBoard(textTime);\r\n\r\n  // Configuração de chaves e id conforme tipo da receita\r\n  const id = recipeId;\r\n  let recipe;\r\n  if (page === 'recipes-done') {\r\n    recipe = recipesDone.find((recipeObj) => recipeObj.id === id);\r\n  } else if (page === 'favorite-recipes') {\r\n    recipe = favoriteRecipes.find((recipeObj) => recipeObj.id === id);\r\n  } else {\r\n    recipe = recipeGlobal;\r\n  }\r\n\r\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\r\n  const [isFavorite, setIsFavorite] = useState('');\r\n\r\n  // Ao montar\r\n  useEffect(() => {\r\n    setIsFetching(true);\r\n    const recipesInFavorite = favoriteRecipes;\r\n\r\n    const recipeIsAlreadyFavorite = recipesInFavorite\r\n      .map((eachRecipe) => eachRecipe.id).includes(id);\r\n\r\n    setIsFavorite(recipeIsAlreadyFavorite);\r\n    setIsFetching(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Atualiza quando o estado local mudar (isFavorite)\r\n  const checkFavorite = () => {\r\n    // Se for false inclui a receita em favoriteRecipes\r\n    // Se for true exclui a receita em favoriteRecipes\r\n    if (!isFavorite) {\r\n      setFavoriteRecipes((prevState) => {\r\n        const obj = (page === '')\r\n          ? {\r\n            id,\r\n            type: type === 'meal' ? 'comida' : 'bebida',\r\n            area: recipe.strArea || '',\r\n            category: recipe.strCategory,\r\n            alcoholicOrNot: type === 'meal' ? '' : recipe.strAlcoholic,\r\n            name: recipe[`str${(type === 'meal') ? 'Meal' : 'Drink'}`],\r\n            image: recipe[`str${(type === 'meal') ? 'Meal' : 'Drink'}Thumb`],\r\n          }\r\n          : {\r\n            id,\r\n            type: recipe.type,\r\n            area: recipe.area || '',\r\n            category: recipe.category,\r\n            alcoholicOrNot: recipe.alcoholicOrNot,\r\n            name: recipe.name,\r\n            image: recipe.image,\r\n          };\r\n        return ([\r\n          ...prevState,\r\n          obj,\r\n        ]);\r\n      });\r\n      setIsFavorite((prevState) => !prevState);\r\n    } else {\r\n      setFavoriteRecipes((prevState) => {\r\n        const zero = 0;\r\n        let favoriteIndex;\r\n        prevState.forEach((recipeFavorited, index) => {\r\n          if (recipeFavorited.id === id) favoriteIndex = index;\r\n        });\r\n        return ([\r\n          ...prevState.slice(zero, favoriteIndex),\r\n          ...prevState.slice(favoriteIndex + 1),\r\n        ]);\r\n      });\r\n      setIsFavorite((prevState) => !prevState);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  };\r\n\r\n  const checkPageBeforeRenderBtns = () => {\r\n    if (page === 'recipes-done') {\r\n      return (\r\n        <section className=\"detalhes-buttons\">\r\n          <button\r\n            data-testid={ testId === ''\r\n              ? 'share-btn' : `${testId}-horizontal-share-btn` }\r\n            type=\"button\"\r\n            className=\"detalhes-share\"\r\n            onClick={ () => setClipboard(`/${urlByType}/${id}`) }\r\n            src={ shareIcon }\r\n          >\r\n            <img src={ shareIcon } alt=\"compartilhe\" />\r\n            { copied ? <span className=\"share-copiado\">Link copiado!</span> : true }\r\n          </button>\r\n        </section>\r\n      );\r\n    }\r\n    return (\r\n      <section className=\"detalhes-buttons\">\r\n        <button\r\n          data-testid={ testId === ''\r\n            ? 'favorite-btn' : `${testId}-horizontal-favorite-btn` }\r\n          type=\"button\"\r\n          className=\"detalhes-fav\"\r\n          onClick={ checkFavorite }\r\n          src={ isFavorite ? 'blackHeartIcon' : 'whiteHeartIcon' }\r\n        >\r\n          <img\r\n            src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\r\n            alt=\"compartilhe\"\r\n          />\r\n        </button>\r\n        <button\r\n          data-testid={ testId === ''\r\n            ? 'share-btn' : `${testId}-horizontal-share-btn` }\r\n          type=\"button\"\r\n          className=\"detalhes-share\"\r\n          onClick={ () => setClipboard(`/${urlByType}/${id}`) }\r\n          src={ shareIcon }\r\n        >\r\n          <img src={ shareIcon } alt=\"compartilhe\" />\r\n          { copied ? <span className=\"share-copiado\">Link copiado!</span> : true }\r\n        </button>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {!isFetching && checkPageBeforeRenderBtns()}\r\n    </section>\r\n  );\r\n}\r\n\r\nFavoriteButton.propTypes = {\r\n  type: propTypes.string.isRequired,\r\n  testId: propTypes.number.isRequired,\r\n  recipeId: propTypes.string.isRequired,\r\n  page: propTypes.string.isRequired,\r\n};\r\n\r\nexport default FavoriteButton;\r\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport FavoriteShareButtons from './FavoriteShareButtons';\n\nfunction Card({ imagePath, itemName, id, itemType, titlePage, pageType,\n  indexId, cardType, area, category, alcoholic, date, tagsRecipe }) {\n  const iconsAccordingPage = (title) => {\n    if (title === 'Receitas Favoritas') {\n      return (\n        <section className=\"card-buttons\">\n          <FavoriteShareButtons\n            key={ id }\n            recipeId={ id }\n            type={ itemType === 'comidas' ? 'meal' : 'drink' }\n            testId={ indexId }\n            page={ pageType }\n          />\n        </section>\n      );\n    }\n    return (\n      <section className=\"card-buttons\">\n        <FavoriteShareButtons\n          key={ id }\n          recipeId={ id }\n          type={ itemType === 'comidas' ? 'meal' : 'drink' }\n          testId={ indexId }\n          page={ pageType }\n        />\n      </section>\n    );\n  };\n\n  const foodOrDrink = () => {\n    if (area && category) {\n      return (\n        <span data-testid={ `${indexId}-${cardType}-top-text` }>\n          {`${area} - `}\n          {`${category}`}\n        </span>\n      );\n    }\n    return (\n      <span data-testid={ `${indexId}-${cardType}-top-text` }>\n        {alcoholic}\n      </span>\n    );\n  };\n\n  return (\n    <div data-testid={ `${indexId}-${cardType}-card` } className=\"card-container\">\n      <div className=\"card-datails\">\n        <Link className=\"card-details-link\" to={ `/${itemType}/${id}` }>\n          <div className=\"card-info\">\n            <h4\n              data-testid={ `${indexId}-${cardType}-name` }\n              className=\"card-title\"\n            >\n              {foodOrDrink()}\n              {' - '}\n              {itemName}\n            </h4>\n            <img\n              data-testid={ `${indexId}-${cardType}-image` }\n              alt=\"recipe cover\"\n              className=\"card-image\"\n              src={ imagePath }\n            />\n            <div className=\"card-date-container\">\n              <div\n                data-testid={ `${indexId}-${cardType}-done-date` }\n                className=\"card-date\"\n              >\n                {date}\n              </div>\n            </div>\n          </div>\n        </Link>\n        <div className=\"card-clickable\">\n          <div className=\"card-tags\">\n            {tagsRecipe}\n          </div>\n          <div className=\"card-icons\">\n            {iconsAccordingPage(titlePage)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCard.defaultProps = {\n  date: '',\n  tagsRecipe: [],\n};\n\nCard.propTypes = {\n  imagePath: propTypes.string.isRequired,\n  itemName: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  itemType: propTypes.string.isRequired,\n  indexId: propTypes.number.isRequired,\n  cardType: propTypes.string.isRequired,\n  area: propTypes.string.isRequired,\n  category: propTypes.string.isRequired,\n  alcoholic: propTypes.string.isRequired,\n  titlePage: propTypes.string.isRequired,\n  tagsRecipe: propTypes.arrayOf(propTypes.shape()),\n  date: propTypes.string,\n  pageType: propTypes.string.isRequired,\n};\n\nexport default Card;\n","import React, { useState, useEffect, useContext } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { fetchDrink, fetchFood } from '../servicesAPI';\n\nfunction Categories({ type }) {\n  const [categories, setCategories] = useState([]);\n  const { setFilterRecipe, setExecuteFilter } = useContext(ReceitasContext);\n\n  useEffect(() => {\n    const firstRequestAPI = async () => {\n      const response = (type === 'meals')\n        ? await fetchFood('categories', '')\n        : await fetchDrink('categories', '');\n      setCategories(response);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const executeSetFilter = (value) => {\n    setExecuteFilter(true);\n    setFilterRecipe((prevState) => (prevState === value ? '' : value));\n  };\n\n  const maxCategoriesPerPage = 5;\n  return (\n    <div className=\"category-container\">\n      { categories.map(({ strCategory }, index) => (\n        (index < maxCategoriesPerPage)\n          ? (\n            <button\n              key={ index }\n              type=\"button\"\n              data-testid={ `${strCategory}-category-filter` }\n              value={ strCategory }\n              onClick={ ({ target }) => executeSetFilter(target.value) }\n            >\n              { strCategory }\n            </button>\n          )\n          : ''\n      )) }\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        value=\"All\"\n        onClick={ ({ target }) => executeSetFilter(target.value) }\n      >\n        All\n      </button>\n    </div>\n  );\n}\n\nexport default Categories;\n\nCategories.propTypes = {\n  type: propTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DrinkIcon, MealIcon, ExploreIcon } from '../images';\n\nconst linkElement = (imgSrc, linkTestId, url) => (\n  <Link\n    to={ url }\n    data-testid={ linkTestId }\n    src={ imgSrc }\n    alt=\"\"\n    style={ { height: '50px', width: '50px' } }\n    className=\"footer-icon\"\n  >\n    <img src={ imgSrc } alt=\"\" />\n  </Link>\n);\n\nfunction Footer() {\n  return (\n    <footer data-testid=\"footer\" className=\"footer-container\">\n      <section className=\"footer-icons\">\n        { linkElement(DrinkIcon, 'drinks-bottom-btn', '/bebidas', 'bebidas') }\n        { linkElement(ExploreIcon, 'explore-bottom-btn', '/explorar', 'explore') }\n        { linkElement(MealIcon, 'food-bottom-btn', '/comidas', 'comidas') }\n      </section>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction SearchBar({ requestAPI }) {\n  const { setSearchType, setSearchInput, searchInput } = useContext(ReceitasContext);\n  const one = /.{1,}/;\n\n  return (\n    <nav className=\"searchBar-container\">\n      <section className=\"searchBar-radios\">\n        <section className=\"searchBar-radio\">\n          <label className=\"search-label\" htmlFor=\"ingrediente\">\n            <input\n              data-testid=\"ingredient-search-radio\"\n              onClick={ () => setSearchType('ingredient') }\n              type=\"radio\"\n              defaultChecked\n              name=\"radio\"\n              id=\"ingrediente\"\n              className=\"radio\"\n            />\n            {/* <span className=\"checkmark\" /> */}\n            Ingrediente\n          </label>\n        </section>\n        <section className=\"searchBar-radio\">\n          <label className=\"search-label\" htmlFor=\"first-letter\">\n            <input\n              onClick={ () => setSearchType('firstLetter') }\n              data-testid=\"first-letter-search-radio\"\n              type=\"radio\"\n              name=\"radio\"\n              id=\"first-letter\"\n              className=\"radio\"\n            />\n            {/* <span className=\"checkmark\" /> */}\n            Primeira letra\n          </label>\n        </section>\n        <section className=\"searchBar-radio\">\n          <label className=\"search-label\" htmlFor=\"name\">\n            <input\n              onClick={ () => setSearchType('itemName') }\n              data-testid=\"name-search-radio\"\n              type=\"radio\"\n              name=\"radio\"\n              id=\"name\"\n              className=\"radio\"\n            />\n            {/* <span className=\"checkmark\" /> */}\n            Nome\n          </label>\n        </section>\n        <button\n          onClick={ requestAPI }\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          disabled={ searchInput < one }\n          className=\"searchBar-buscar\"\n        >\n          Buscar\n        </button>\n      </section>\n      <input\n        onChange={ ({ target }) => setSearchInput(target.value) }\n        type=\"text\"\n        data-testid=\"search-input\"\n        className=\"searchBar-input\"\n        placeholder=\"Digite aqui...\"\n      />\n    </nav>\n  );\n}\n\nSearchBar.propTypes = {\n  requestAPI: propTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ProfileIcon, SearchIcon } from '../images';\nimport ReceitasContext from '../context/ReceitasContext';\nimport SearchBar from './SearchBar';\n\nfunction Header({ requestAPI }) {\n  const { disabledSearchIcon, disabledProfileIcon,\n    titleHeader, showSearchBar, setShowSearchBar } = useContext(ReceitasContext);\n\n  function toggleSearchBar() {\n    if (!showSearchBar) setShowSearchBar(true);\n    if (showSearchBar) setShowSearchBar(false);\n  }\n\n  const profileIcon = (\n    <Link to=\"/perfil\">\n      <img data-testid=\"profile-top-btn\" src={ ProfileIcon } alt=\"\" />\n    </Link>\n  );\n\n  const searchIcon = (\n    <button className=\"header-icon-search\" type=\"button\" onClick={ toggleSearchBar }>\n      <img data-testid=\"search-top-btn\" src={ SearchIcon } alt=\"\" />\n    </button>\n  );\n\n  const titleElement = (<h3 data-testid=\"page-title\">{ titleHeader }</h3>);\n\n  return (\n    <header className=\"header-container\">\n      <div className=\"header-icons\">\n        { (disabledSearchIcon) ? '' : searchIcon }\n        { titleElement }\n        { (disabledProfileIcon) ? '' : profileIcon }\n      </div>\n      {showSearchBar && (\n        <div className=\"header-searchBar\">\n          <SearchBar requestAPI={ requestAPI } />\n        </div>\n      )}\n    </header>\n  );\n}\n\nHeader.defaultProps = {\n  requestAPI: () => null,\n};\n\nHeader.propTypes = {\n  requestAPI: propTypes.func,\n};\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction ListaIngredientes({ recipe, type }) {\n  const { recipesDone, recipesInProgress } = useContext(ReceitasContext);\n\n  // Configuração de chaves e id conforme tipo da receita\n  const id = recipe[`id${(type === 'meal') ? 'Meal' : 'Drink'}`];\n  const keyByType = (type === 'meal') ? 'meals' : 'cocktails';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n\n  // Recebe as receitas em progresso do local storage ou do estado global\n  const recipesInProgLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const recipesInProg = (recipesInProgLS !== null) ? recipesInProgLS : recipesInProgress;\n\n  // Verificação se a receita está em progresso e se está feita\n  const isDone = recipesDone.find((recipeDone) => recipeDone.id === id);\n  const recipesIsInProg = Object.keys(recipesInProg[keyByType])\n    .find((recipeId) => recipeId === id) === id;\n\n  // Criação do array de ingredientes com o controle checked\n  const createIngredientList = () => {\n    const keys = Object.keys(recipe);\n    const ingredientsName = keys.reduce((array, key) => {\n      const str = recipe[key];\n      const condition = (key.includes('strIngredient') && str !== '' && str !== null);\n      return (condition) ? array.concat(str) : array;\n    }, []);\n\n    const measures = keys.reduce((array, key) => {\n      const str = (recipe[key] !== ' ' && recipe[key] !== null) ? recipe[key] : '';\n      const condition = key.includes('strMeasure');\n      return (condition) ? array.concat(str) : array;\n    }, []);\n\n    const ingredients = ingredientsName.map((name, index) => ({\n      name,\n      measure: measures[index],\n    }));\n\n    return ingredients;\n  };\n\n  const list = createIngredientList();\n\n  return (\n    <div>\n      <h4 className=\"detalhes-ingredients-title\">Ingredientes</h4>\n      <section className=\"detalhes-ingredients\">\n        { list\n          .map((ingredient, index) => {\n            const { name, measure } = ingredient;\n            return (\n              <span\n                data-testid={ `${index}-ingredient-name-and-measure` }\n                key={ index }\n                className=\"ingredient\"\n              >\n                {`${name}${' -'}${'- '}${measure}`}\n              </span>\n            );\n          })}\n      </section>\n      {!isDone\n      && (\n        <Link className=\"detalhes-btn-link\" to={ `/${urlByType}/${id}/in-progress` }>\n          <button\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            className=\"detalhes-new-recipe-btn\"\n          >\n            {!recipesIsInProg ? 'Iniciar Receita' : 'Continuar Receita'}\n          </button>\n        </Link>\n      )}\n    </div>\n  );\n}\n\nexport default ListaIngredientes;\n\nListaIngredientes.propTypes = {\n  recipe: propTypes.objectOf(propTypes.string).isRequired,\n  type: propTypes.string.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction ListaIngredientesEmProgresso({ recipe, type }) {\n  const { setRecipesDone,\n    recipesInProgress, setRecipesInProgress,\n    isFetching, setIsFetching } = useContext(ReceitasContext);\n\n  // Configuração de chaves e id conforme tipo da receita\n  const id = recipe[`id${(type === 'meal') ? 'Meal' : 'Drink'}`];\n  const keyByType = (type === 'meal') ? 'meals' : 'cocktails';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n\n  // Recebe as receitas em progresso do do estado global\n  const recipesInProg = recipesInProgress;\n\n  // Verificação se a receita está em progresso\n  const recipesIsInProg = Object.keys(recipesInProg[keyByType])\n    .find((recipeId) => recipeId === id) === id;\n\n  // Criação do array de ingredientes com o controle checked\n  const createIngredientList = () => {\n    const keys = Object.keys(recipe);\n    const ingredientsName = keys.reduce((array, key) => {\n      const str = recipe[key];\n      const condition = (key.includes('strIngredient') && str !== '' && str !== null);\n      return (condition) ? array.concat(str) : array;\n    }, []);\n\n    const measures = keys.reduce((array, key) => {\n      const str = (recipe[key] !== ' ' && recipe[key] !== null) ? recipe[key] : '';\n      const condition = key.includes('strMeasure');\n      return (condition) ? array.concat(str) : array;\n    }, []);\n\n    const ingredients = ingredientsName.map((name, index) => ({\n      name,\n      measure: measures[index],\n      checked: false,\n    }));\n\n    return ingredients;\n  };\n\n  // Ao montar o componente\n  useEffect(() => {\n    setIsFetching(true);\n    if (!recipesIsInProg) {\n      setRecipesInProgress((prevState) => ({\n        ...prevState,\n        [keyByType]: {\n          ...prevState[keyByType],\n          [id]: createIngredientList(),\n        },\n      }));\n    }\n    setIsFetching(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Ao finalizar receita atualiza o estado global e o local storage\n  function finishRecipe() {\n    setRecipesDone((prevState) => ([\n      ...prevState,\n      {\n        id,\n        type: type === 'meal' ? 'comida' : 'bebida',\n        area: recipe.strArea || '',\n        category: recipe.strCategory,\n        alcoholicOrNot: type === 'meal' ? '' : recipe.strAlcoholic,\n        image: recipe[`str${(type === 'meal') ? 'Meal' : 'Drink'}Thumb`],\n        name: recipe[`str${(type === 'meal') ? 'Meal' : 'Drink'}`],\n        doneDate: recipe.dateModified,\n        tags: (recipe.strTags !== null) ? recipe.strTags.split(',') : [],\n      },\n    ]));\n    delete recipesInProgress[keyByType][id];\n  }\n\n  // Ao dar check atualiza o estado global e o local storage\n  const check = ({ target }) => {\n    const { value, checked } = target;\n    const valueName = value.split('-medida-')[0];\n    const valueMeasure = value.split('-medida-')[1];\n    const isChecked = !(checked === false);\n    const zero = 0;\n    setRecipesInProgress((prevState) => {\n      if (prevState) {\n        const objIngThatContainsIngName = prevState[keyByType][id]\n          .find((ingredient) => ingredient.name === valueName\n            && ingredient.measure === valueMeasure);\n\n        const ingredientIndex = prevState[keyByType][id]\n          .indexOf(objIngThatContainsIngName);\n        return ({\n          ...prevState,\n          [keyByType]: {\n            ...prevState[keyByType],\n            [id]: [\n              ...prevState[keyByType][id].slice(zero, ingredientIndex),\n              { ...prevState[keyByType][id][ingredientIndex], checked: isChecked },\n              ...prevState[keyByType][id].slice(ingredientIndex + 1),\n            ],\n          },\n        });\n      }\n    });\n  };\n\n  const list = (recipesIsInProg) ? recipesInProg[keyByType][id] : createIngredientList();\n\n  const shouldDisable = list && list\n    .map((ingredient) => ingredient.checked).includes(false);\n\n  return (\n    <div>\n      {list ? (\n        <div>\n          <h4 className=\"detalhes-ingredients-title\">Ingredientes</h4>\n          <section className=\"detalhes-ingredients\">\n            {!isFetching && list\n              .map((ingredient, index) => {\n                const { name, measure, checked } = ingredient;\n                return (\n                  <label\n                    key={ index }\n                    htmlFor={ index }\n                    data-testid={ `${index}-ingredient-step` }\n                    className=\"ingredient\"\n                  >\n                    <input\n                      id={ index }\n                      key={ index }\n                      type=\"checkbox\"\n                      onChange={ ({ target }) => check({ target }, index) }\n                      checked={ checked }\n                      value={ `${name}-medida-${measure}` }\n                    />\n                    {`${name}${' -'}${'- '}${measure}`}\n                  </label>\n                );\n              })}\n          </section>\n          <div>\n            {list\n            && (\n              <Link className=\"detalhes-btn-link\" to=\"/receitas-feitas\">\n                <button\n                  className=\"detalhes-new-recipe-btn\"\n                  data-testid=\"finish-recipe-btn\"\n                  type=\"button\"\n                  onClick={ () => finishRecipe() }\n                  disabled={ shouldDisable }\n                >\n                  Finalizar Receita\n                </button>\n              </Link>\n            )}\n            <Link className=\"detalhes-btn-link\" to={ `/${urlByType}` }>\n              <span className=\"detalhes-save-recipe-btn\">Salvar Para Mais Tarde</span>\n            </Link>\n          </div>\n        </div>\n      ) : <div>loading</div>}\n    </div>\n  );\n}\n\nexport default ListaIngredientesEmProgresso;\n\nListaIngredientesEmProgresso.propTypes = {\n  recipe: propTypes.objectOf(propTypes.string).isRequired,\n  type: propTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { fetchDrink, fetchFood } from '../servicesAPI';\n\nfunction Recomended({ itemType }) {\n  const [isFetchingLocal, setIsFetchingLocal] = useState(false);\n  const [recomendations, setRecommendations] = useState([]);\n  const six = 6;\n\n  useEffect(() => {\n    let mounted = true;\n    setIsFetchingLocal(true);\n    const firstRequestAPI = async () => {\n      const response = (itemType === 'comidas')\n        ? await fetchFood('itemName', '')\n        : await fetchDrink('itemName', '');\n      if (mounted) {\n        setRecommendations(response);\n        setIsFetchingLocal(false);\n      }\n    };\n    firstRequestAPI();\n    return () => { mounted = false; };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const cardRecomendation = (recomendation, indexId) => {\n    const inversePrefix = { comidas: 'Meal', bebidas: 'Drink' };\n    const { [`str${inversePrefix[itemType]}Thumb`]: imagePath,\n      [`id${inversePrefix[itemType]}`]: id,\n      [`str${inversePrefix[itemType]}`]: itemName } = recomendation;\n\n    return (\n      <div\n        key={ indexId }\n        data-testid={ `${indexId}-recomendation-card` }\n        className=\"recomended-list\"\n      >\n        <div className=\"recomended-datails\">\n          <Link className=\"recomended-details-link\" to={ `/${itemType}/${id}` }>\n            <div className=\"recomended-img-body\">\n              <img\n                data-testid={ `${indexId}-card-img` }\n                alt=\"recipe cover\"\n                className=\"recomended-image\"\n                src={ imagePath }\n              />\n            </div>\n            <div\n              data-testid={ `${indexId}-recomendation-title` }\n              className=\"recomended-info\"\n            >\n              <h4 className=\"recomended-title\">{itemName}</h4>\n            </div>\n          </Link>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div data-slide-to=\"2\" className=\"recomended-container\">\n      { isFetchingLocal\n        ? <h2>Loading...</h2>\n        : (recomendations.map((recomendation, index) => ((index < six)\n          ? cardRecomendation(recomendation, index)\n          : '')))}\n    </div>\n  );\n}\n\nRecomended.propTypes = {\n  itemType: propTypes.string.isRequired,\n};\n\nexport default Recomended;\n","import React, { useContext, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { fetchDrink, fetchFood } from '../servicesAPI';\nimport { Header, Footer, Categories, Card } from '../components';\n\nfunction Receitas({ history, match }) {\n  const { recipes, setRecipes, setShowSearchBar,\n    setTitleHeader, setDisabledSearchIcon,\n    isFetching, setIsFetching, searchType,\n    searchInput, filterRecipe,\n    filterIngredient } = useContext(ReceitasContext);\n  const twelve = 12;\n\n  const type = (match.path.match('comidas')) ? 'meal' : 'drink';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n  const categoryType = (type === 'meal') ? 'meals' : 'drinks';\n  const titleByType = (type === 'meal') ? 'Comidas' : 'Bebidas';\n  const prefixByType = (type === 'meal') ? 'Meal' : 'Drink';\n\n  useEffect(() => {\n    setDisabledSearchIcon(false);\n    setTitleHeader(titleByType);\n    setShowSearchBar(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (filterRecipe) {\n      setIsFetching(true);\n      const firstRequestAPI = async () => {\n        let response;\n        if (type === 'meal') {\n          response = (filterRecipe === '' || filterRecipe === 'All')\n            ? await fetchFood('itemName', '')\n            : await fetchFood('byCategory', filterRecipe);\n        } else {\n          response = (filterRecipe === '' || filterRecipe === 'All')\n            ? await fetchDrink('itemName', '')\n            : await fetchDrink('byCategory', filterRecipe);\n        }\n        setRecipes(response);\n        setIsFetching(false);\n      };\n      firstRequestAPI();\n    } else {\n      setIsFetching(true);\n      const firstRequestAPI = async () => {\n        const responseFood = (filterIngredient === '')\n          ? await fetchFood('itemName', '')\n          : await fetchFood('ingredient', filterIngredient);\n        const responseDrink = (filterIngredient === '')\n          ? await fetchDrink('itemName', '')\n          : await fetchDrink('ingredient', filterIngredient);\n        const response = (type === 'meal') ? responseFood : responseDrink;\n        setRecipes(response);\n        setIsFetching(false);\n      };\n      firstRequestAPI();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterRecipe, filterIngredient]);\n\n  return (\n    <main className={ `${urlByType}-container` }>\n      <header>\n        <Header\n          requestAPI={ async () => {\n            const response = (type === 'meal')\n              ? await fetchFood(searchType, searchInput)\n              : await fetchDrink(searchType, searchInput);\n            if (response && response.length === 1) {\n              history.push(`/${urlByType}/${response[0][`id${prefixByType}`]}`);\n            }\n            if (response) {\n              setRecipes(response);\n            } else {\n              // eslint-disable-next-line no-alert\n              alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n            }\n          } }\n        />\n      </header>\n      <section className={ `${urlByType}-body` }>\n        <section className={ `${urlByType}-filters` }>\n          <Categories type={ categoryType } />\n        </section>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : recipes.map((eachRecipe, index) => (\n              index < twelve ? <Card\n                indexId={ index }\n                key={ index }\n                imagePath={ eachRecipe[`str${prefixByType}Thumb`] }\n                itemName={ eachRecipe[`str${prefixByType}`] }\n                id={ eachRecipe[`id${prefixByType}`] }\n                itemType={ urlByType }\n                cardType=\"recipe\"\n              />\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nReceitas.propTypes = {\n  history: propTypes.shape().isRequired,\n  match: propTypes.shape().isRequired,\n};\n\nexport default Receitas;\n","import React, { useContext, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { fetchDrink, fetchFood } from '../servicesAPI';\nimport { Header, Footer, Categories, Card } from '../components';\n\nfunction ReceitasB({ history, match }) {\n  const { recipes, setRecipes, setShowSearchBar,\n    setTitleHeader, setDisabledSearchIcon,\n    isFetching, setIsFetching, searchType,\n    searchInput, filterRecipe,\n    filterIngredient } = useContext(ReceitasContext);\n  const twelve = 12;\n\n  const type = (match.path.match('comidas')) ? 'meal' : 'drink';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n  const categoryType = (type === 'meal') ? 'meals' : 'drinks';\n  const titleByType = (type === 'meal') ? 'Comidas' : 'Bebidas';\n  const prefixByType = (type === 'meal') ? 'Meal' : 'Drink';\n\n  useEffect(() => {\n    setDisabledSearchIcon(false);\n    setTitleHeader(titleByType);\n    setShowSearchBar(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (filterRecipe) {\n      setIsFetching(true);\n      const firstRequestAPI = async () => {\n        let response;\n        if (type === 'meal') {\n          response = (filterRecipe === '' || filterRecipe === 'All')\n            ? await fetchFood('itemName', '')\n            : await fetchFood('byCategory', filterRecipe);\n        } else {\n          response = (filterRecipe === '' || filterRecipe === 'All')\n            ? await fetchDrink('itemName', '')\n            : await fetchDrink('byCategory', filterRecipe);\n        }\n        setRecipes(response);\n        setIsFetching(false);\n      };\n      firstRequestAPI();\n    } else {\n      setIsFetching(true);\n      const firstRequestAPI = async () => {\n        const responseFood = (filterIngredient === '')\n          ? await fetchFood('itemName', '')\n          : await fetchFood('ingredient', filterIngredient);\n        const responseDrink = (filterIngredient === '')\n          ? await fetchDrink('itemName', '')\n          : await fetchDrink('ingredient', filterIngredient);\n        const response = (type === 'meal') ? responseFood : responseDrink;\n        setRecipes(response);\n        setIsFetching(false);\n      };\n      firstRequestAPI();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterRecipe, filterIngredient]);\n\n  return (\n    <main className={ `${urlByType}-container` }>\n      <header>\n        <Header\n          requestAPI={ async () => {\n            const response = (type === 'meal')\n              ? await fetchFood(searchType, searchInput)\n              : await fetchDrink(searchType, searchInput);\n            if (response && response.length === 1) {\n              history.push(`/${urlByType}/${response[0][`id${prefixByType}`]}`);\n            }\n            if (response) {\n              setRecipes(response);\n            } else {\n              // eslint-disable-next-line no-alert\n              alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n            }\n          } }\n        />\n      </header>\n      <section className={ `${urlByType}-body` }>\n        <section className={ `${urlByType}-filters` }>\n          <Categories type={ categoryType } />\n        </section>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : recipes.map((eachRecipe, index) => (\n              index < twelve ? <Card\n                indexId={ index }\n                key={ index }\n                imagePath={ eachRecipe[`str${prefixByType}Thumb`] }\n                itemName={ eachRecipe[`str${prefixByType}`] }\n                id={ eachRecipe[`id${prefixByType}`] }\n                itemType={ urlByType }\n                cardType=\"recipe\"\n              />\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nReceitasB.propTypes = {\n  history: propTypes.shape().isRequired,\n  match: propTypes.shape().isRequired,\n};\n\nexport default ReceitasB;\n","import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { Recomended, ListaIngredientes, FavoriteShareButtons } from '../components';\nimport { fetchDrink, fetchFood } from '../servicesAPI';\n\nfunction ReceitaDetalhada({ match }) {\n  const { setIsFetching, isFetching, keyProps,\n    setRecipeGlobal } = useContext(ReceitasContext);\n  const type = (match.path.match('comidas')) ? 'meal' : 'drink';\n  const [recipe, setRecipe] = useState([]);\n  const { id } = match.params;\n\n  useEffect(() => {\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (type === 'meal')\n        ? await fetchFood('byId', id)\n        : await fetchDrink('byId', id);\n      setRecipe(...response);\n      setRecipeGlobal(...response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type]);\n\n  return (\n    <main className=\"detalhes-main\">\n      {isFetching\n        ? <h2>Loading...</h2>\n        : (\n          <section>\n            <header className=\"detalhes-header\">\n              <section className=\"detalhes-img\">\n                <section className=\"detalhes-img-border\">\n                  <img\n                    data-testid=\"recipe-photo\"\n                    src={ recipe[`str${keyProps[type]}Thumb`] }\n                    alt=\"\"\n                  />\n                </section>\n              </section>\n              <section className=\"detalhes-bar\">\n                <h3 data-testid=\"recipe-title\" className=\"detalhes-title\">\n                  { recipe[`str${keyProps[type]}`] }\n                </h3>\n                <h4 data-testid=\"recipe-category\" className=\"detalhes-subtitle\">\n                  { recipe[type === 'meal' ? 'strCategory' : 'strAlcoholic'] }\n                </h4>\n                <FavoriteShareButtons recipeId={ id } type={ type } />\n              </section>\n            </header>\n            <article className=\"detalhes-article\">\n              <ListaIngredientes recipe={ recipe } type={ type } />\n              <hr />\n              <section className=\"detalhes-instructions-container\">\n                <h4 className=\"detalhes-titles\">Instruções de preparo</h4>\n                <section className=\"detalhes-instructions\">\n                  <p data-testid=\"instructions\">{recipe.strInstructions}</p>\n                  {type === 'meal' && (\n                    <section className=\"detalhes-video\">\n                      <iframe\n                        title={ `Como Fazer ${recipe[`str${keyProps[type]}`]}` }\n                        data-testid=\"video\"\n                        width=\"560\"\n                        height=\"315\"\n                        src={ !recipe.strYoutube\n                          ? <h2>Loading...</h2>\n                          : recipe.strYoutube.replace('watch?v=', 'embed/') }\n                        frameBorder=\"0\"\n                        allow=\"accelerometer;\n                          encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                      />\n                    </section>\n                  )}\n                </section>\n              </section>\n              <hr />\n              <h4 className=\"detalhes-titles\">Recomendações de acompanhamento</h4>\n              <section className=\"detalhes-list-recomended\">\n                <Recomended itemType={ type === 'meal' ? 'bebidas' : 'comidas' } />\n              </section>\n            </article>\n          </section>\n        )}\n    </main>\n  );\n}\n\nReceitaDetalhada.propTypes = {\n  match: propTypes.shape({\n    isExact: propTypes.bool,\n    params: propTypes.shape({\n      id: propTypes.string,\n      path: propTypes.string,\n      url: propTypes.string,\n    }),\n    path: propTypes.string,\n    url: propTypes.string,\n  }).isRequired,\n};\n\nexport default ReceitaDetalhada;\n","import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { ListaIngredientesEmProgresso, FavoriteShareButtons } from '../components';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { fetchDrink, fetchFood } from '../servicesAPI';\n\nfunction ReceitaEmProgresso({ match }) {\n  const { setIsFetching, isFetching, keyProps,\n    setRecipeGlobal, recipesDone } = useContext(ReceitasContext);\n  const type = (match.path.match('comidas')) ? 'meal' : 'drink';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n  const { id } = match.params;\n  const isDone = recipesDone.find((recipeDone) => recipeDone.id === id);\n  const [recipe, setRecipe] = useState([]);\n\n  useEffect(() => {\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (type === 'meal')\n        ? await fetchFood('byId', id)\n        : await fetchDrink('byId', id);\n      setRecipe(...response);\n      setRecipeGlobal(...response);\n      setIsFetching(false);\n    };\n    if (!isDone) firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const firstRender = (isDone)\n    ? <Redirect to={ `/${urlByType}/${id}` } />\n    : <h2>Loading...</h2>;\n\n  return (\n    <main className=\"detalhes-main\">\n      {isFetching\n        ? firstRender\n        : (\n          <div>\n            <header className=\"detalhes-header\">\n              <section className=\"detalhes-img\">\n                <section className=\"detalhes-img-border\">\n                  <img\n                    data-testid=\"recipe-photo\"\n                    src={ recipe[`str${keyProps[type]}Thumb`] }\n                    alt=\"\"\n                  />\n                </section>\n              </section>\n              <section className=\"detalhes-bar\">\n                <h3 data-testid=\"recipe-title\" className=\"detalhes-title\">\n                  { recipe[`str${keyProps[type]}`] }\n                </h3>\n                <h4 data-testid=\"recipe-category\" className=\"detalhes-subtitle\">\n                  { recipe[type === 'meal' ? 'strCategory' : 'strAlcoholic'] }\n                </h4>\n                <FavoriteShareButtons recipeId={ id } type={ type } />\n              </section>\n            </header>\n            <article className=\"detalhes-article\">\n              { recipe !== '' ? (\n                <ListaIngredientesEmProgresso recipe={ recipe } type={ type } />\n              ) : <p>Loading...</p>}\n              <hr />\n              <section className=\"detalhes-instructions-container\">\n                <h4 className=\"detalhes-titles\">Instruções de preparo</h4>\n                <section className=\"detalhes-instructions\">\n                  <p data-testid=\"instructions\">{recipe.strInstructions}</p>\n                </section>\n              </section>\n            </article>\n          </div>\n        )}\n    </main>\n  );\n}\n\nReceitaEmProgresso.propTypes = {\n  match: propTypes.shape({\n    isExact: propTypes.bool,\n    params: propTypes.shape({\n      id: propTypes.string,\n      path: propTypes.string,\n      url: propTypes.string,\n    }),\n    path: propTypes.string,\n    url: propTypes.string,\n  }).isRequired,\n};\n\nexport default ReceitaEmProgresso;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Header, CardFavorite } from '../components';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction ReceitasFeitas() {\n  const { isFetching, setIsFetching, setTitleHeader, recipesDone,\n    setDisabledSearchIcon, setShowSearchBar } = useContext(ReceitasContext);\n\n  useEffect(() => {\n    setIsFetching(true);\n    setTitleHeader('Receitas Feitas');\n    setDisabledSearchIcon(true);\n    setShowSearchBar(false);\n    setIsFetching(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [filter, setFilter] = useState('All');\n  const typeByFilter = { Foods: 'comida', Drinks: 'bebida' };\n  const feitas = (filter === 'All') ? recipesDone : recipesDone\n    .filter((recipe) => recipe.type === typeByFilter[filter]);\n\n  return (\n    <main className=\"receitas-container\">\n      <Header />\n      <section className=\"receitas-body\">\n        <section className=\"receitas-filters\">\n          <section className=\"done-fav-container\">\n            <button\n              data-testid=\"filter-by-all-btn\"\n              type=\"button\"\n              value=\"All\"\n              onClick={ () => setFilter('All') }\n            >\n              All\n            </button>\n            <button\n              data-testid=\"filter-by-food-btn\"\n              type=\"button\"\n              value=\"Foods\"\n              onClick={ () => setFilter('Foods') }\n            >\n              Food\n            </button>\n            <button\n              data-testid=\"filter-by-drink-btn\"\n              type=\"button\"\n              value=\"Drinks\"\n              onClick={ () => setFilter('Drinks') }\n            >\n              Drinks\n            </button>\n          </section>\n        </section>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <p>Nenhuma Receita Feita</p>\n            : (\n              feitas.map((feita, idx) => (\n                <CardFavorite\n                  pageType=\"recipes-done\"\n                  key={ idx }\n                  imagePath={ feita.image }\n                  itemName={ feita.name }\n                  id={ feita.id }\n                  itemType={ `${feita.type}s` }\n                  indexId={ idx }\n                  cardType=\"horizontal\"\n                  area={ feita.area }\n                  category={ feita.category }\n                  alcoholic={ feita.alcoholicOrNot }\n                  titlePage=\"Receitas Feitas\"\n                  date={ feita.doneDate }\n                  tagsRecipe={ feita.tags.map((tagName, idxTag) => (\n                    <button\n                      className=\"card-tags\"\n                      type=\"button\"\n                      key={ idxTag }\n                      data-testid={ `${idx}-${tagName}-horizontal-tag` }\n                    >\n                      <span className=\"tag\">{tagName}</span>\n                    </button>\n                  )) }\n                />\n              ))\n            )}\n        </section>\n      </section>\n    </main>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Header, CardFavorite } from '../components';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction ReceitasFeitas() {\n  const { isFetching, setIsFetching, setTitleHeader, favoriteRecipes,\n    setDisabledSearchIcon, setShowSearchBar } = useContext(ReceitasContext);\n\n  useEffect(() => {\n    setTitleHeader('Receitas Favoritas');\n    setDisabledSearchIcon(true);\n    setShowSearchBar(false);\n    setIsFetching(true);\n    setIsFetching(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [filter, setFilter] = useState('All');\n  const typeByFilter = { Foods: 'comida', Drinks: 'bebida' };\n  const feitas = (filter === 'All') ? favoriteRecipes : favoriteRecipes\n    .filter((recipe) => recipe.type === typeByFilter[filter]);\n\n  return (\n    <main className=\"receitas-container\">\n      <Header />\n      <section className=\"receitas-body\">\n        <section className=\"receitas-filters\">\n          <section className=\"done-fav-container\">\n            <button\n              data-testid=\"filter-by-all-btn\"\n              type=\"button\"\n              value=\"All\"\n              onClick={ () => setFilter('All') }\n            >\n              All\n            </button>\n            <button\n              data-testid=\"filter-by-food-btn\"\n              type=\"button\"\n              value=\"Foods\"\n              onClick={ () => setFilter('Foods') }\n            >\n              Food\n            </button>\n            <button\n              data-testid=\"filter-by-drink-btn\"\n              type=\"button\"\n              value=\"Drinks\"\n              onClick={ () => setFilter('Drinks') }\n            >\n              Drinks\n            </button>\n          </section>\n        </section>\n        <section className=\"cards-list\">\n          {isFetching && feitas === []\n            ? <p>Nenhuma Receita Favorita</p>\n            : (\n              feitas.map((feita, idx) => (\n                <CardFavorite\n                  pageType=\"favorite-recipes\"\n                  key={ idx }\n                  imagePath={ feita.image }\n                  itemName={ feita.name }\n                  id={ feita.id }\n                  itemType={ `${feita.type}s` }\n                  indexId={ idx }\n                  cardType=\"horizontal\"\n                  area={ feita.area }\n                  category={ feita.category }\n                  alcoholic={ feita.alcoholicOrNot }\n                  titlePage=\"Receitas Favoritas\"\n                  date={ feita.doneDate }\n                />\n              ))\n            )}\n        </section>\n      </section>\n    </main>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Footer } from '../components';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction PagePerfil() {\n  const { setDisabledSearchIcon,\n    setTitleHeader, setShowSearchBar,\n    isFetching, setIsFetching, setLogin } = useContext(ReceitasContext);\n  const [userEmail, setUserEmail] = useState('');\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Perfil');\n    setShowSearchBar(false);\n    const localStorageEmail = localStorage.getItem('user');\n    if (localStorageEmail) {\n      const { email } = JSON.parse(localStorageEmail);\n      setUserEmail(email);\n    }\n    setIsFetching(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"profile-container\">\n      <Header />\n      <section className=\"profile-body\">\n        <section className=\"profile-email\">\n          {!isFetching && <h3 data-testid=\"profile-email\">{userEmail}</h3>}\n        </section>\n        <section className=\"profile-buttons\">\n          <Link className=\"profile-link\" to=\"/receitas-favoritas\">\n            <button\n              data-testid=\"profile-favorite-btn\"\n              type=\"button\"\n              className=\"profile-btn\"\n            >\n              Receitas Favoritas\n            </button>\n          </Link>\n          <Link className=\"profile-link\" to=\"/receitas-feitas\">\n            <button\n              className=\"profile-btn\"\n              data-testid=\"profile-done-btn\"\n              type=\"button\"\n            >\n              Receitas Feitas\n            </button>\n          </Link>\n          <Link className=\"profile-link\" to=\"/\">\n            <button\n              data-testid=\"profile-logout-btn\"\n              type=\"button\"\n              className=\"profile-btn-sair\"\n              onClick={ () => setLogin(false) }\n            >\n              Sair\n            </button>\n          </Link>\n        </section>\n      </section>\n      <Footer />\n    </section>\n  );\n}\n\nexport default PagePerfil;\n","import { Link } from 'react-router-dom';\nimport React, { useContext, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { Header, Footer } from '../components';\n\nfunction Explorar({ requestAPI }) {\n  const { setDisabledSearchIcon,\n    setTitleHeader, setShowSearchBar,\n  } = useContext(ReceitasContext);\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Explorar');\n    setShowSearchBar(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"explorar-container\">\n      <Header\n        requestAPI={ requestAPI }\n      />\n      <section className=\"explorar-body\">\n        <Link\n          className=\"explorar-comidas-link\"\n          data-testid=\"explore-food\"\n          to=\"/explorar/comidas\"\n        >\n          Explorar Comidas\n        </Link>\n        <Link\n          className=\"explorar-bebidas-link\"\n          data-testid=\"explore-drinks\"\n          to=\"/explorar/bebidas\"\n        >\n          Explorar Bebidas\n        </Link>\n      </section>\n      <Footer />\n    </section>\n  );\n}\n\nExplorar.defaultProps = {\n  requestAPI: () => null,\n};\n\nExplorar.propTypes = {\n  requestAPI: propTypes.func,\n};\n\nexport default Explorar;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { fetchDrink, fetchFood } from '../servicesAPI';\nimport { Header, Footer } from '../components';\n\nfunction ExplorarReceitas({ match }) {\n  const { setDisabledSearchIcon, setIsFetching, isFetching,\n    setTitleHeader, setShowSearchBar,\n  } = useContext(ReceitasContext);\n  const [randomId, setRandomId] = useState('');\n\n  const type = (match.path.match('comidas')) ? 'meal' : 'drink';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n  const titleByType = (type === 'meal') ? 'Explorar Comidas' : 'Explorar Bebidas';\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader(titleByType);\n    setShowSearchBar(false);\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (type === 'meal')\n        ? await fetchFood('random', '')\n        : await fetchDrink('random', '');\n      setRandomId(response[0][(type === 'meal') ? 'idMeal' : 'idDrink']);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"explorar-container\">\n      <Header />\n      <section className=\"explorar-body\">\n        <Link\n          data-testid=\"explore-by-ingredient\"\n          to={ `/explorar/${urlByType}/ingredientes` }\n          className={ `explorar-${urlByType}-link` }\n        >\n          Por Ingredientes\n        </Link>\n        {type === 'meal'\n          && (\n            <Link\n              data-testid=\"explore-by-area\"\n              to={ `/explorar/${urlByType}/area` }\n              className={ `explorar-${urlByType}-link` }\n            >\n              Por Local de Origem\n            </Link>\n          )}\n        {!isFetching\n          ? (\n            <Link\n              data-testid=\"explore-surprise\"\n              to={ `/${urlByType}/${randomId}` }\n              className={ `explorar-${urlByType}-link` }\n            >\n              Me Surpreenda!\n            </Link>)\n          : null}\n      </section>\n      <Footer />\n    </section>\n  );\n}\n\nExplorarReceitas.propTypes = {\n  match: propTypes.shape({\n    isExact: propTypes.bool,\n    params: propTypes.shape({\n      id: propTypes.string,\n      path: propTypes.string,\n      url: propTypes.string,\n    }),\n    path: propTypes.string,\n    url: propTypes.string,\n  }).isRequired,\n};\n\nexport default ExplorarReceitas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { fetchDrink, fetchFood } from '../servicesAPI';\nimport { Header, Footer } from '../components';\n\nfunction ExplorarReceitasPorIngredientes({ match }) {\n  const { setDisabledSearchIcon, setFilterIngredient,\n    setTitleHeader, setShowSearchBar,\n    isFetching, setIsFetching } = useContext(ReceitasContext);\n  const [ingredientes, setIngredientes] = useState([]);\n  const twelve = 12;\n\n  const type = (match.path.match('comidas')) ? 'meal' : 'drink';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n  const srcByType = (type === 'meal') ? 'meal' : 'cocktail';\n  const propStrIngredient = (type === 'meal') ? 'strIngredient' : 'strIngredient1';\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Explorar Ingredientes');\n    setShowSearchBar(false);\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (type === 'meal')\n        ? await fetchFood('listIngredient', '')\n        : await fetchDrink('listIngredient', '');\n      setIngredientes(response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <main className={ `${urlByType}-container` }>\n      <Header />\n      <section className={ `${urlByType}-body` }>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : ingredientes.map((ingredient, index) => (\n              index < twelve\n                ? (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-ingredient-card` }\n                  >\n                    <div className=\"recomended-datails-ingredient\">\n                      <Link\n                        className=\"recomended-details-link\"\n                        to={ `/${urlByType}` }\n                        onClick={ () => setFilterIngredient(\n                          ingredient[propStrIngredient],\n                        ) }\n                      >\n                        <div className=\"recomended-img-body\">\n                          <img\n                            data-testid={ `${index}-card-img` }\n                            alt=\"recipe cover\"\n                            className=\"recomended-image\"\n                            src={ `https://www.the${srcByType}db.com/images/ingredients/${ingredient[propStrIngredient]}-Small.png` }\n                          />\n                        </div>\n                        <div\n                          className=\"recomended-info\"\n                        >\n                          <h4\n                            data-testid={ `${index}-card-name` }\n                            className=\"recomended-title\"\n                          >\n                            {ingredient[propStrIngredient]}\n                          </h4>\n                        </div>\n                      </Link>\n                    </div>\n                  </div>\n                )\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nExplorarReceitasPorIngredientes.propTypes = {\n  match: propTypes.shape({\n    isExact: propTypes.bool,\n    params: propTypes.shape({\n      id: propTypes.string,\n      path: propTypes.string,\n      url: propTypes.string,\n    }),\n    path: propTypes.string,\n    url: propTypes.string,\n  }).isRequired,\n};\n\nexport default ExplorarReceitasPorIngredientes;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ReceitasContext from '../context/ReceitasContext';\nimport { fetchFood } from '../servicesAPI';\nimport { Header, Footer, Card } from '../components';\n\nfunction ExplorarComidasPorLocalOrigem() {\n  const { setDisabledSearchIcon, setRecipes, recipes,\n    setTitleHeader, setShowSearchBar,\n    isFetching, setIsFetching } = useContext(ReceitasContext);\n  const [areas, setAreas] = useState([]);\n  const [filterArea, setFilterArea] = useState('');\n  const twelve = 12;\n\n  useEffect(() => {\n    setDisabledSearchIcon(false);\n    setTitleHeader('Explorar Origem');\n    setShowSearchBar(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (filterArea === '' || filterArea === 'All')\n        ? await fetchFood('itemName', '')\n        : await fetchFood('filterByArea', filterArea);\n      const areasOption = await fetchFood('byArea', '');\n      setAreas(areasOption);\n      setRecipes(response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterArea]);\n\n  return (\n    <main className=\"comidas-container\">\n      <Header />\n      <section className=\"comidas-body\">\n        <section className=\"comidas-origin\">\n          <select\n            onChange={ ({ target }) => setFilterArea(target.value) }\n            data-testid=\"explore-by-area-dropdown\"\n            className=\"comidas-select\"\n          >\n            <option value=\"Pesquise por Area\">Pesquise por Area</option>\n            <option data-testid=\"All-option\" value=\"All\">All</option>\n            {isFetching\n              ? ''\n              : areas.map((area, idx) => (\n                <option\n                  data-testid={ `${area.strArea}-option` }\n                  key={ idx }\n                  value={ area.strArea }\n                >\n                  {area.strArea}\n                </option>\n              ))}\n          </select>\n        </section>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : recipes.map((meal, index) => (\n              index < twelve ? <Card\n                indexId={ index }\n                key={ index }\n                imagePath={ meal.strMealThumb }\n                itemName={ meal.strMeal }\n                id={ meal.idMeal }\n                itemType=\"comidas\"\n                cardType=\"recipe\"\n              />\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nexport default ExplorarComidasPorLocalOrigem;\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from './ReceitasContext';\n\nfunction ReceitasProvider({ children }) {\n  const [login, setLogin] = useState('');\n  const [email, setEmail] = useState('');\n  const [hidden, setHidden] = useState(true);\n  const [isFetching, setIsFetching] = useState(true);\n  const [searchInput, setSearchInput] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [searchType, setSearchType] = useState('ingredient');\n  const [disabledProfileIcon, setDisabledProfileIcon] = useState(false);\n  const [disabledSearchIcon, setDisabledSearchIcon] = useState(false);\n  const [titleHeader, setTitleHeader] = useState('');\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [filterIngredient, setFilterIngredient] = useState('');\n  const [filterRecipe, setFilterRecipe] = useState('');\n  const [executeFilter, setExecuteFilter] = useState(false);\n  const [filterDisabled, setFilterDisabled] = useState(false);\n  const [recipeGlobal, setRecipeGlobal] = useState('');\n\n  const [recipesDone, setRecipesDone] = useState([]);\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n  const [recipesInProgress, setRecipesInProgress] = useState({\n    cocktails: {},\n    meals: {},\n  });\n\n  const keyProps = { meal: 'Meal', drink: 'Drink' };\n  const keyURL = { meal: 'comidas', drink: 'bebidas' };\n  const keyObj = { meal: 'meals', drink: 'drinks' };\n\n  // RECOVER====================================================================\n  const [isRecovering, setIsRecovering] = useState(true);\n\n  // Mount\n  // Adicionar 1 if dentro do Mount para cada estado global necessário\n  useEffect(() => {\n    // Receitas em progresso\n    const recipesInProgLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (recipesInProgLS !== null && isRecovering) setRecipesInProgress(recipesInProgLS);\n\n    // Receitas feitas\n    const recipesDoneLS = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (recipesDoneLS !== null && isRecovering) setRecipesDone(recipesDoneLS);\n\n    // Receitas favoritas\n    const favoriteRecipesLS = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteRecipesLS !== null && isRecovering) setFavoriteRecipes(favoriteRecipesLS);\n\n    setIsRecovering(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Update\n  // Replicar 1 Update para cada estado global necessário\n\n  // Receitas em progresso\n  useEffect(() => {\n    if (!isRecovering) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recipesInProgress]);\n\n  // Receitas feitas\n  useEffect(() => {\n    if (!isRecovering) {\n      localStorage.setItem('doneRecipes', JSON.stringify(recipesDone));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recipesDone]);\n\n  // Receitas favoritas\n  useEffect(() => {\n    if (!isRecovering) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [favoriteRecipes]);\n\n  useEffect(() => {\n    if (!isRecovering && !login) {\n      localStorage.clear();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [login]);\n\n  // ===========================================================================\n\n  function renderEmail(param) {\n    return (\n      <div>\n        {param\n          ? (\n            <p data-testid=\"profile-email\">{email}</p>\n          )\n          : (\n            <h3 data-testid=\"profile-email\">\n              {JSON.parse(localStorage.getItem('user')).email}\n            </h3>\n          )}\n      </div>\n    );\n  }\n\n  const contextValue = {\n    login,\n    setLogin,\n    email,\n    setEmail,\n    hidden,\n    setHidden,\n    searchType,\n    setSearchType,\n    recipes,\n    setRecipes,\n    disabledProfileIcon,\n    setDisabledProfileIcon,\n    disabledSearchIcon,\n    setDisabledSearchIcon,\n    titleHeader,\n    setTitleHeader,\n    showSearchBar,\n    setShowSearchBar,\n    searchInput,\n    setSearchInput,\n    isFetching,\n    setIsFetching,\n    filterRecipe,\n    setFilterRecipe,\n    filterIngredient,\n    setFilterIngredient,\n    executeFilter,\n    setExecuteFilter,\n    filterDisabled,\n    setFilterDisabled,\n    recipesDone,\n    setRecipesDone,\n    recipesInProgress,\n    setRecipesInProgress,\n    keyProps,\n    keyObj,\n    keyURL,\n    renderEmail,\n    favoriteRecipes,\n    setFavoriteRecipes,\n    isRecovering,\n    recipeGlobal,\n    setRecipeGlobal,\n  };\n\n  return (\n    <ReceitasContext.Provider value={ contextValue }>\n      {children}\n    </ReceitasContext.Provider>\n  );\n}\n\nReceitasProvider.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default ReceitasProvider;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  Login, Perfil, Explorar, Receitas, ReceitasB, ReceitasFeitas,\n  ReceitasFavoritas, ExplorarReceitas, ReceitaEmProgresso,\n  ExplorarReceitasPorIngredientes, ExplorarComidasPorLocalOrigem,\n  ReceitaDetalhada, NotFound } from './pages';\n\nimport ReceitasProvider from './context/ReceitasProvider';\nimport './App.css';\nimport './stylesCSS/Card.css';\nimport './stylesCSS/Login.css';\nimport './stylesCSS/Profile.css';\nimport './stylesCSS/Recomended.css';\nimport './stylesCSS/InitialPages.css';\nimport './stylesCSS/PageDetalhada.css';\nimport './stylesCSS/ExplorarPages.css';\nimport './stylesCSS/ResponsiveApp.css';\nimport './stylesCSS/ReceitasDoneFav.css';\nimport './stylesCSS/DetalhesResponsive.css';\nimport './stylesCSS/RecomendedResponsive.css';\n\nfunction App() {\n  return (\n    <ReceitasProvider>\n      <Switch>\n        <Route\n          path=\"/bebidas/:id/in-progress\"\n          component={ ReceitaEmProgresso }\n        />\n        <Route\n          path=\"/comidas/:id/in-progress\"\n          component={ ReceitaEmProgresso }\n        />\n        <Route path=\"/comidas/:id\" component={ ReceitaDetalhada } />\n        <Route path=\"/bebidas/:id\" component={ ReceitaDetalhada } />\n        <Route path=\"/comidas\" component={ Receitas } />\n        <Route path=\"/bebidas\" component={ ReceitasB } />\n        <Route\n          path=\"/explorar/comidas/ingredientes\"\n          component={ ExplorarReceitasPorIngredientes }\n        />\n        <Route\n          path=\"/explorar/bebidas/ingredientes\"\n          component={ ExplorarReceitasPorIngredientes }\n        />\n        <Route\n          path=\"/explorar/comidas/area\"\n          component={ ExplorarComidasPorLocalOrigem }\n        />\n        <Route\n          path=\"/explorar/bebidas/area\"\n          component={ NotFound }\n        />\n        <Route path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n        <Route path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n        <Route path=\"/perfil\" component={ Perfil } />\n        <Route path=\"/explorar/comidas\" component={ ExplorarReceitas } />\n        <Route path=\"/explorar/bebidas\" component={ ExplorarReceitas } />\n        <Route path=\"/explorar\" component={ Explorar } />\n        <Route exact path=\"/\" component={ Login } />\n        <Route component={ NotFound } />\n      </Switch>\n    </ReceitasProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst toDeploy = true;\nconst appWithRoute = (toDeploy)\n  ? <HashRouter><App /></HashRouter>\n  : <BrowserRouter><App /></BrowserRouter>;\n\nReactDOM.render(\n  appWithRoute,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}